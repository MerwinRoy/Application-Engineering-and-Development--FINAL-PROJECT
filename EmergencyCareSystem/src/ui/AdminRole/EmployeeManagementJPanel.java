/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.AdminRole;

//Import Employee
import Business.Employee.Employee;

//Import Organization
import Business.Organization.Organization;

//Import String validation
import Business.Validation.StringValidation;

//Import Organization directory
import Business.Organization.OrganizationDirectory;

//Import TableModel
import javax.swing.table.DefaultTableModel;

//Import InputVerifier
import javax.swing.InputVerifier;

//Import JOptionPane
import javax.swing.JOptionPane;


//Import CardLayout
import java.awt.CardLayout;

//Import JPanel
import javax.swing.JPanel;

/**
 *
 * @author raj
 */
public class EmployeeManagementJPanel extends javax.swing.JPanel 

{

    //OrganizationDirectory object
    private OrganizationDirectory organizationDirectory;
    
    //JPanel object
    private JPanel container;
    
    /**
     * Creates new form ManageOrganizationJPanel
     */
    public EmployeeManagementJPanel(JPanel container,OrganizationDirectory organizationDirectory)
    
    {
        //Initialize components
        initComponents();
        
        this.
                organizationDirectory = organizationDirectory;
        this.
                container = container;

        //inputVerifiers function called
        inputVerifiers();
        
        //function to populate organization combo box is called
        populateOrganizationComboBox();
        
        //function to populate organization employee combo box is called
        populateOrganizationEmpComboBox();
    }
    //inputVerifiers function 
    private void inputVerifiers() 
    {
          
        InputVerifier strValidation = new StringValidation();
        txtName.
                setInputVerifier(strValidation);
     }
    

    // function to populate table
    private void populateTable(Organization org)
    {
        //tableModelObject created
        DefaultTableModel tableModel = (DefaultTableModel) tblOrganization.getModel();
        
        //set row count of table model to 0
        tableModel.setRowCount(0);
        
        //For loop to iterate through list of employees
        for (Employee employee : org.
                getEmployeeDirectory().
                getListOfEmployee())
            
        {
            Object[] row = new Object[2];
            
            row[0] = employee.
                    getId();
            
            row[1] = employee.
                    getName();
            
            //add row after each iteration
            tableModel.
                    addRow(row);
            
        }
    }
    
 
    
    //function to add organization employee combo box
    public void populateOrganizationEmpComboBox()
    {
        //remove items from combo box
        
        cmOrganizationEmp.
                removeAllItems();
        
        //for loop to iterate through list of organization
        for (Organization org : organizationDirectory.
                getListOfOrganization())
        {
            //add items to combo box
            cmOrganizationEmp.
                    addItem(org);
            
        }
    }


    
        //function to populate organization combo box
    public void populateOrganizationComboBox()
    {
        
        //remove items from organization combobox
        cmbOrganization.
                removeAllItems();
        
        //for loop to iterate through organization directory
        for (Organization org : organizationDirectory.
                getListOfOrganization())
        {
            //add organization object to combo box
            cmbOrganization.
                    addItem(org);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrganization = new javax.swing.JTable();
        btnCreate = new javax.swing.JButton();
        cmbOrganization = new javax.swing.JComboBox();
        lblOrganization = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        cmOrganizationEmp = new javax.swing.JComboBox();
        lblOrganizationEmp = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();

        setLayout(null);

        tblOrganization.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        tblOrganization.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrganization);
        if (tblOrganization.getColumnModel().getColumnCount() > 0) {
            tblOrganization.getColumnModel().getColumn(0).setResizable(false);
            tblOrganization.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(120, 130, 860, 140);

        btnCreate.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnCreate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/button_create.png"))); // NOI18N
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate);
        btnCreate.setBounds(250, 530, 110, 30);

        cmbOrganization.setBackground(new java.awt.Color(153, 255, 255));
        cmbOrganization.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        cmbOrganization.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbOrganization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOrganizationActionPerformed(evt);
            }
        });
        add(cmbOrganization);
        cmbOrganization.setBounds(240, 70, 100, 30);

        lblOrganization.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lblOrganization.setText("Organization:");
        add(lblOrganization);
        lblOrganization.setBounds(120, 50, 130, 60);

        btnBack.setFont(new java.awt.Font("Arial Black", 0, 13)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Double Left_100px.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(30, 770, 65, 40);

        lblName.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lblName.setText("Name:");
        add(lblName);
        lblName.setBounds(120, 440, 90, 21);

        txtName.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        add(txtName);
        txtName.setBounds(240, 440, 130, 31);

        cmOrganizationEmp.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        cmOrganizationEmp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmOrganizationEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmOrganizationEmpActionPerformed(evt);
            }
        });
        add(cmOrganizationEmp);
        cmOrganizationEmp.setBounds(240, 360, 130, 20);

        lblOrganizationEmp.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lblOrganizationEmp.setText("Organization:");
        add(lblOrganizationEmp);
        lblOrganizationEmp.setBounds(120, 360, 110, 21);

        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background-emergency_1378x910.jpeg"))); // NOI18N
        add(lblImage);
        lblImage.setBounds(0, 0, 1378, 910);
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        
        //name string
        String name = txtName.getText();
        
        //Organization object
        Organization org = (Organization) cmOrganizationEmp.
                getSelectedItem();
        
        if( txtName.
                getText().
                trim().
                isEmpty() )
        {
            //Prompt error message
            JOptionPane.
                    showMessageDialog(null, "Empty text fields not permitted for submission.");
            return;
        }
        
        //create employee name and add to directory
        org.
                getEmployeeDirectory().
                createEmployee(name);
        
        //refresh table
        populateTable(org);
        
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        //remove current container
        container.
                remove(this);
        
        //CardLayout object created
        CardLayout cardLayout = (CardLayout) container.
                getLayout();
        
        //previous container loaded
        cardLayout.
                previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbOrganizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOrganizationActionPerformed
        
        //Organization object to point to selected item in combo box
        Organization org = (Organization) cmbOrganization.
                getSelectedItem();
        
        if (org != null)
        {
            //refresh table
            populateTable(org);
        }
    }//GEN-LAST:event_cmbOrganizationActionPerformed

    private void cmOrganizationEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmOrganizationEmpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmOrganizationEmpActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JComboBox cmOrganizationEmp;
    private javax.swing.JComboBox cmbOrganization;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblOrganization;
    private javax.swing.JLabel lblOrganizationEmp;
    private javax.swing.JTable tblOrganization;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
