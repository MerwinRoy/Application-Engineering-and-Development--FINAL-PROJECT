/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.DocRole;


//Import Enterprise
import Business.Enterprise.Enterprise;

//Import lab organization
import Business.Organization.LabOrg;

//Import organization
import Business.Organization.Organization;

//Import user account
import Business.UserAccount.UserAccount;

//Import String validation
import Business.Validation.StringValidation;

//Import Doc work request
import Business.WorkQueue.DocWorkReq;

//Import Donor work request
import Business.WorkQueue.DonorWorkReq;

//Import lab work request
import Business.WorkQueue.LabWorkReq;

//Import management work request
import Business.WorkQueue.ManagementWorkReq;

//Import Work request
import Business.WorkQueue.WorkRequest;

//Import cardlayout
import java.awt.CardLayout;

//Import component
import java.awt.Component;

//Import InputVerifier
import javax.swing.InputVerifier;

//Import JOptionPane
import javax.swing.JOptionPane;

//Import JPanel
import javax.swing.JPanel;

//Import DefaultTableModel
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pradyumnareddy
 */
public class RequestLabTestJPanel extends javax.swing.JPanel 

{

    private JPanel container;
    private Enterprise enterprise;
    private UserAccount account;
   private Organization org;
    /**
     * Creates new form RequestLabTestJPanel
     */
    public RequestLabTestJPanel(JPanel container, UserAccount account, Organization org,Enterprise enterprise) {
        initComponents();
        inputVerifier();
        this.container = container;
        this.enterprise = enterprise;
        this.account = account;
        this.org=org;
        lblValue.setText(enterprise.getName());
        populateRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    //Function InputVerifier
    private void inputVerifier() 
    
    {
        //Input verifier to validate string
        InputVerifier stringValidation = new StringValidation();
        
        //setting input verifier to a textfield
        txtMessage.setInputVerifier(stringValidation);
        
    }
    
    public void populateRequestTable()
    {
        //tableModel object created
        DefaultTableModel tableModel = (DefaultTableModel) tblWorkRequest.
                getModel();
        
        //set row count to 0
        tableModel.setRowCount(0);
        
        //for loop to iterate through list of work request
        for (WorkRequest wr : account.
                getWorkQueue().
                getListOfWorkRequest())
            
        {
            if (!(wr instanceof DocWorkReq) && !(wr instanceof DonorWorkReq) && !(wr instanceof ManagementWorkReq))
            {
                
                Object[] row = new Object[4];
            
                row[0] = wr;
            
                row[1] = wr.
                        getReceiverAccount();
            
                row[2] = wr.
                        getStatus();
           
                String result = ((LabWorkReq) wr).getResult();
                row[3] = result == null ? "Waiting" : result;
            
            
                //add row to table model to 
                tableModel.addRow(row);
            }
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRequestTest = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        txtMessage = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        lblValue = new javax.swing.JLabel();
        lblEnterprise = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkRequest = new javax.swing.JTable();
        lblDashBoard = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnRequestTest.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnRequestTest.setText("Request Test");
        btnRequestTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestTestActionPerformed(evt);
            }
        });
        add(btnRequestTest, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 450, 140, 40));

        lblMessage.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lblMessage.setText("Enter a Message:");
        add(lblMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 400, 140, 30));

        txtMessage.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        add(txtMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 400, 290, 30));

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Double Left_100px.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 830, 50, 40));

        lblValue.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        lblValue.setText("<value>");
        add(lblValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 130, -1));

        lblEnterprise.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        lblEnterprise.setText("Enterprise:");
        add(lblEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 120, 30));

        tblWorkRequest.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        tblWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Receiver", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkRequest);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, -1, 170));

        lblDashBoard.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lblDashBoard.setText("Lab Dashboard:");
        add(lblDashBoard, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 151, 140, 30));

        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background-emergency_1378x910.jpeg"))); // NOI18N
        add(lblImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1380, 910));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRequestTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestTestActionPerformed
        
        //message string to fetch request message from text
        String message = txtMessage.getText();
        
        
        if( txtMessage.
                getText().
                trim().
                isEmpty() )
            
        {
            //Prompt error message
            JOptionPane.
                    showMessageDialog(null, "Empty details are not permitted");
            
            return;
        }
        
        //New LabWorkRequest object created
        LabWorkReq labWorkRequest = new LabWorkReq();
        
        //Set message of object
        
        //set status of object
        labWorkRequest.
                setStatus("Sent");
        
        labWorkRequest.
                setMessage(message);
        
        //set sender account
        labWorkRequest.
                setSenderAccount(account);
        
        
        //organization object
        Organization org = null;
        
        //for loop to iterate through list of organization
        for (Organization organization : enterprise.
                getOrganizationDirectory().
                getListOfOrganization())
        {
            if (organization instanceof LabOrg)
            {
                org = organization;
                break;
            }
        }
        
        if (org!=null)
        {
            //add labwork request to organization object
            org.
                    getWorkQueue().
                    getListOfWorkRequest().
                    add(labWorkRequest);
            account.
                    getWorkQueue().
                    getListOfWorkRequest().
                    add(labWorkRequest);
            
        }
        
        //refresh table
        populateRequestTable();
        
        //update prompt
        JOptionPane.
                showMessageDialog(null, "Lab tested as requested by Doctor..","Success", JOptionPane.
                        PLAIN_MESSAGE);
        
        //message text field set to empty
        txtMessage.setText("");
    }//GEN-LAST:event_btnRequestTestActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        
        //current container removed
        container.remove(this);
        
        //array to store collection of container components
        Component[] compArray = container.getComponents();
        
        //component object to access each array components
        Component comp = compArray[compArray.length - 1];
        
        
        //doctorworkareapanel loaded
        DoctorWorkAreaJPanel doctorWorkAreaPanel = (DoctorWorkAreaJPanel) comp;
        
        //cardlayout object created
        CardLayout cardLayout = (CardLayout)container.
                getLayout();
        
        //previous cardlayout loaded
        cardLayout.
                previous(container);
        
    }//GEN-LAST:event_btnBackActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRequestTest;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDashBoard;
    private javax.swing.JLabel lblEnterprise;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblValue;
    private javax.swing.JTable tblWorkRequest;
    private javax.swing.JTextField txtMessage;
    // End of variables declaration//GEN-END:variables
}
