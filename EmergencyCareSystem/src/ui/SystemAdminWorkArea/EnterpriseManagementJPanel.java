/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Validation.StringValidation;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.InputVerifier;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class EnterpriseManagementJPanel extends javax.swing.JPanel {

    private JPanel container;
    private EcoSystem ecoSystem;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public EnterpriseManagementJPanel(JPanel container,
            EcoSystem ecoSystem) 
    {
        
        //Initialize components
        initComponents();
        
        this.container = container;
        
        this.ecoSystem = ecoSystem;
        
        //input verifier function
        inputVerifier();
        
        //populate table function
        populateTable();
        
        // populate combo box function
        populateComboBox();
        
        //input verifier function
        inputVerifier();
    }
    
    //inputverifier function
    public void inputVerifier()
    {
        //InputVerifier object for string validation
        InputVerifier stringVal = new StringValidation();
        
        //set textfield with input verifier
        txtName.
                setInputVerifier(stringVal);
    }

        private void populateComboBox() 
        {
        //remove items from combobox
        cmbNetwork.
                removeAllItems();
        
        //remove all items from combobox
        cmbEnterpriseType.
                removeAllItems();

        //for loop to iterate through network list
        for (Network net : ecoSystem.getNetworkList()) 
        {
            cmbNetwork.
                    addItem(net);
        }

        //for loop to iterate through enterprise type
        for (Enterprise.
                EnterpriseType entType : Enterprise.
                        EnterpriseType.
                        values()) 
        {
            
            cmbEnterpriseType.
                    addItem(entType);
        }

    }
    //populate table
    private void populateTable() 
    
    {
        //tableModel object created
        DefaultTableModel tableModel = (DefaultTableModel) tblEnterprise.
                getModel();

        //set row count to 0
        tableModel.setRowCount(0);
        
        for (Network net : ecoSystem.getNetworkList()) 
        {
            for (Enterprise ent : net.getEnterpriseDirectory().getListOfEnterprise()) 
            {
                
                Object[] row = new Object[3];
                
                row[0] = ent.
                        getName();
                row[1] = net.
                        getName();
                row[2] = ent.
                        getTypeOfEnterprise().
                        getValue();

                //Rows added in model
                tableModel.addRow(row);
            }
        }
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEnterprise = new javax.swing.JTable();
        lblNetwork = new javax.swing.JLabel();
        cmbNetwork = new javax.swing.JComboBox();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblEnterpriseType = new javax.swing.JLabel();
        cmbEnterpriseType = new javax.swing.JComboBox();
        btnSubmit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblImage = new javax.swing.JLabel();

        setLayout(null);

        tblEnterprise.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        tblEnterprise.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Network", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEnterprise);

        add(jScrollPane1);
        jScrollPane1.setBounds(220, 90, 523, 140);

        lblNetwork.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lblNetwork.setText("Network");
        add(lblNetwork);
        lblNetwork.setBounds(220, 280, 140, 40);

        cmbNetwork.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        cmbNetwork.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(cmbNetwork);
        cmbNetwork.setBounds(370, 280, 136, 34);

        lblName.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lblName.setText("Name");
        add(lblName);
        lblName.setBounds(220, 380, 59, 28);

        txtName.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        add(txtName);
        txtName.setBounds(370, 380, 136, 34);

        lblEnterpriseType.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lblEnterpriseType.setText("Enterprise Type");
        add(lblEnterpriseType);
        lblEnterpriseType.setBounds(220, 330, 140, 28);

        cmbEnterpriseType.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        cmbEnterpriseType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(cmbEnterpriseType);
        cmbEnterpriseType.setBounds(370, 330, 136, 34);

        btnSubmit.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnSubmit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/button_submit.png"))); // NOI18N
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit);
        btnSubmit.setBounds(420, 550, 130, 40);

        btnBack.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Double Left_100px.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(60, 820, 60, 40);

        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background-emergency_1378x910.jpeg"))); // NOI18N
        add(lblImage);
        lblImage.setBounds(0, 0, 1378, 910);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed

        //network object
        Network net = (Network) cmbNetwork.
                getSelectedItem();
        
       
        Enterprise.
                EnterpriseType entType = (Enterprise.
                EnterpriseType) cmbEnterpriseType.
                        getSelectedItem();

        if (net == null || entType == null) {
            JOptionPane.
                    showMessageDialog(null, "Invalid Input!");
            return;
        }

        String name = txtName.
                getText();
        if( txtName.
                getText().
                trim().
                isEmpty() )
        {
            
            //Error prompt
            JOptionPane.
                    showMessageDialog(null, "Please enter all the details");
            return;
        }

        //Enterprise object
        Enterprise ent = net.
                getEnterpriseDirectory().
                createAndAddEnterprise(name, entType);

        
        //populate table
        populateTable();

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        
        //remove container
        container.remove(this);
        
        //component array to collect components of container
         Component[] compArray = container.
                 getComponents();
         
         //component object
        Component comp = compArray[compArray.length - 1];
        
        //New JPanel created
        SystemAdminWorkAreaJPanel sysAdminWorkPanel = (SystemAdminWorkAreaJPanel) comp;
        
        //populate tree of JPanel
        sysAdminWorkPanel.populateTree();

        //cardlayout object created
        CardLayout cardLayout = (CardLayout) container.getLayout();
        
        //previous layout loaded
        cardLayout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox cmbEnterpriseType;
    private javax.swing.JComboBox cmbNetwork;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEnterpriseType;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNetwork;
    private javax.swing.JTable tblEnterprise;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
